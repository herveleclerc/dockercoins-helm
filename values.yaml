images:
  hasher:
    repository: dockercoins/hasher
    tag: v0.1
  redis:
    repository: redis
    tag: latest
  webui:
    repository: dockercoins/webui
    tag: v0.1
  rng:
    repository: dockercoins/rng
    tag: v0.1
  worker:
    repository: dockercoins/worker
    tag: v0.1

ingress:
  webui:
    enabled: true
    hostname: 'dockercoins.caas.fr'
    path: /
    tls: false
    certificate: ''
    issuer:
      name: letsencrypt-staging

# config:
#   clusterProvider: infrastructure
#   imagePullPolicy: IfNotPresent
#   updateStrategy: RollingUpdate
#   hasher:
#     hostname: ''
#   redis:
#     hostname: ''
#   webui:
#     baseUrl: ''
#     hostname: ''
#   rng:
#     hostname: ''
#   worker:
#     hostname: ''

# service:
#   hasher:
#     type: NodePort
#     externalTrafficPolicy: Cluster
#     nodePorts:
#       http: ''
#   redis:
#     type: NodePort
#     externalTrafficPolicy: Cluster
#     nodePorts:
#       http: ''
#   webui:
#     type: NodePort
#     externalTrafficPolicy: Cluster
#     nodePorts:
#       http: ''
#   rng:
#     type: NodePort
#     externalTrafficPolicy: Cluster
#     nodePorts:
#       http: ''
#   worker:
#     type: NodePort
#     externalTrafficPolicy: Cluster
#     nodePorts:
#       http: ''
# persistence:
#   accessMode: ReadWriteOnce
#   enabled: false
#   existingClaim: ''
#   size: 1Gi
#   storageClass: ''
#   velero:
#     enabled: false
#   stash:
#     enabled: false
#     keepLast: 30
#     paused: false
#     repository: stash-stash
#     schedule: '0 0 * * *'
#     restore:
#       snapshot: ''

# probes:
#   liveness:
#     initialDelaySeconds: 120
#     periodSeconds: 10
#     timeoutSeconds: 5
#     failureThreshold: 6
#     successThreshold: 1
#   readiness:
#     initialDelaySeconds: 30
#     periodSeconds: 10
#     timeoutSeconds: 5
#     failureThreshold: 6
#     successThreshold: 1
